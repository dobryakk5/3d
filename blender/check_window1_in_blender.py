#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –í–ù–£–¢–†–ò –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ Blender (—á–µ—Ä–µ–∑ Scripting workspace).
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ—Ç window_1.
"""

import bpy

def check_window1():
    # –ù–∞–π–¥–µ–º –∫—É–± –∏ —Å—Ç–µ–Ω—É
    cube = bpy.data.objects.get("Opening_Cube_window_1")
    wall = bpy.data.objects.get("Outline_Walls")

    if not cube:
        print("‚ùå –ö—É–± Opening_Cube_window_1 –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    if not wall:
        print("‚ùå –°—Ç–µ–Ω–∞ Outline_Walls –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return

    print(f"‚úì –ù–∞–π–¥–µ–Ω—ã: –∫—É–± –∏ —Å—Ç–µ–Ω–∞")
    print(f"  –ö—É–± location: {cube.location}")
    print(f"  –ö—É–± scale: {cube.scale}")
    print(f"  –°—Ç–µ–Ω–∞: {len(wall.data.vertices)} –≤–µ—Ä—à–∏–Ω, {len(wall.data.polygons)} –≥—Ä–∞–Ω–µ–π")

    # –í—ã–¥–µ–ª–∏–º –∫—É–± –∏ —Å—Ç–µ–Ω—É –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    bpy.ops.object.select_all(action='DESELECT')
    cube.select_set(True)
    wall.select_set(True)
    bpy.context.view_layer.objects.active = wall

    # –ü–µ—Ä–µ–∫–ª—é—á–∏–º—Å—è –Ω–∞ Edit Mode —Å—Ç–µ–Ω—ã —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–µ—Ä—à–∏–Ω—ã
    bpy.ops.object.mode_set(mode='OBJECT')

    # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –≤–µ—Ä—à–∏–Ω—ã —Å—Ç–µ–Ω—ã –≤ –æ–±–ª–∞—Å—Ç–∏ window_1
    target_y = 10.1
    target_x_min = 0.4
    target_x_max = 2.7
    tolerance = 0.5

    matching_verts = []
    for v in wall.data.vertices:
        if (abs(v.co.y - target_y) < tolerance and
            target_x_min <= v.co.x <= target_x_max):
            matching_verts.append(v)

    print(f"\n  –í–µ—Ä—à–∏–Ω —Å—Ç–µ–Ω—ã –≤ –æ–±–ª–∞—Å—Ç–∏ window_1: {len(matching_verts)}")

    if matching_verts:
        x_coords = [v.co.x for v in matching_verts]
        y_coords = [v.co.y for v in matching_verts]
        z_coords = [v.co.z for v in matching_verts]

        print(f"    –î–∏–∞–ø–∞–∑–æ–Ω X: {min(x_coords):.3f} - {max(x_coords):.3f}")
        print(f"    –î–∏–∞–ø–∞–∑–æ–Ω Y: {min(y_coords):.3f} - {max(y_coords):.3f}")
        print(f"    –î–∏–∞–ø–∞–∑–æ–Ω Z: {min(z_coords):.3f} - {max(z_coords):.3f}")

    # –ü—Ä–æ–≤–µ—Ä–∏–º –≥—Ä–∞–Ω–∏ —Å—Ç–µ–Ω—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –∫—É–±–∞
    cube_bounds_x = (cube.location.x - 1.2, cube.location.x + 1.2)
    cube_bounds_y = (cube.location.y - 0.3, cube.location.y + 0.3)
    cube_bounds_z = (cube.location.z - 1.0, cube.location.z + 1.0)

    faces_in_cube = 0
    for poly in wall.data.polygons:
        center = poly.center
        if (cube_bounds_x[0] <= center.x <= cube_bounds_x[1] and
            cube_bounds_y[0] <= center.y <= cube_bounds_y[1] and
            cube_bounds_z[0] <= center.z <= cube_bounds_z[1]):
            faces_in_cube += 1

    print(f"\n  –ì—Ä–∞–Ω–µ–π —Å—Ç–µ–Ω—ã –í–ù–£–¢–†–ò –∫—É–±–∞: {faces_in_cube}")

    if faces_in_cube > 0:
        print(f"  ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ï—Å—Ç—å –≥—Ä–∞–Ω–∏ —Å—Ç–µ–Ω—ã –≤–Ω—É—Ç—Ä–∏ –∫—É–±–∞ - –≤—ã—Ä–µ–∑ –Ω–µ —Å–∫–≤–æ–∑–Ω–æ–π!")
    else:
        print(f"  ‚úÖ –ù–µ—Ç –≥—Ä–∞–Ω–µ–π –≤–Ω—É—Ç—Ä–∏ –∫—É–±–∞ - –≤—ã—Ä–µ–∑ —É—Å–ø–µ—à–µ–Ω!")

    # –£—Å—Ç–∞–Ω–æ–≤–∏–º –∫–∞–º–µ—Ä—É —Ç–∞–∫, —á—Ç–æ–±—ã —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ window_1
    print(f"\nüì∑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–º–µ—Ä—ã –Ω–∞ window_1...")
    bpy.ops.object.camera_add(location=(cube.location.x, cube.location.y - 5, cube.location.z))
    camera = bpy.context.active_object
    camera.rotation_euler = (1.5708, 0, 0)  # 90 –≥—Ä–∞–¥—É—Å–æ–≤ –≤–æ–∫—Ä—É–≥ X
    bpy.context.scene.camera = camera

    print(f"\n‚úì –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å:")
    print(f"  1. –ù–∞–∂–º–∏—Ç–µ Numpad 0 –¥–ª—è –≤–∏–¥–∞ —Å –∫–∞–º–µ—Ä—ã")
    print(f"  2. –ò–ª–∏ –≤—Ä—É—á–Ω—É—é –ø—Ä–∏–±–ª–∏–∑—å—Ç–µ—Å—å –∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º {cube.location}")
    print(f"  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –≤–∏–¥–µ–Ω –ª–∏ –≤—ã—Ä–µ–∑ –≤ —Å—Ç–µ–Ω–µ")

if __name__ == "__main__":
    check_window1()
