#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏.
–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ –æ—á–∏—â–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç—ã.
"""

import bpy
import os


def compare_objects():
    """
    –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–∞ OBJ —Ñ–∞–π–ª–∞: –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ –æ—á–∏—â–µ–Ω–Ω—ã–π.
    """
    script_dir = os.path.dirname(os.path.abspath(__file__))

    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    original_path = os.path.join(script_dir, "wall_coordinates_inverted_3d.obj")
    cleaned_path = os.path.join(script_dir, "wall_outline_cleaned.obj")

    print("=" * 60)
    print("–°–†–ê–í–ù–ï–ù–ò–ï –ì–ï–û–ú–ï–¢–†–ò–ò: –î–û –∏ –ü–û–°–õ–ï –û–ß–ò–°–¢–ö–ò")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    if not os.path.exists(original_path):
        print(f"–û–®–ò–ë–ö–ê: –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {original_path}")
        return

    if not os.path.exists(cleaned_path):
        print(f"–û–®–ò–ë–ö–ê: –û—á–∏—â–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {cleaned_path}")
        return

    # –û—á–∏—â–∞–µ–º —Å—Ü–µ–Ω—É
    bpy.ops.object.select_all(action='SELECT')
    bpy.ops.object.delete()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    print(f"\n–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞: {original_path}")
    try:
        bpy.ops.wm.obj_import(filepath=original_path)
    except AttributeError:
        bpy.ops.import_scene.obj(filepath=original_path)

    # –ù–∞—Ö–æ–¥–∏–º –æ–±—ä–µ–∫—Ç Building_Outline_Merged
    original_obj = bpy.data.objects.get("Building_Outline_Merged")

    if not original_obj:
        print("–û–®–ò–ë–ö–ê: –û–±—ä–µ–∫—Ç 'Building_Outline_Merged' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
    original_stats = {
        "vertices": len(original_obj.data.vertices),
        "faces": len(original_obj.data.polygons),
        "edges": len(original_obj.data.edges)
    }

    print(f"\n–û–†–ò–ì–ò–ù–ê–õ (–¥–æ –æ—á–∏—Å—Ç–∫–∏):")
    print(f"  –í–µ—Ä—à–∏–Ω—ã: {original_stats['vertices']}")
    print(f"  –ì—Ä–∞–Ω–∏: {original_stats['faces']}")
    print(f"  –†–µ–±—Ä–∞: {original_stats['edges']}")

    # –ü–µ—Ä–µ–∏–º–µ–Ω—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –¥–ª—è —Ä–∞–∑–ª–∏—á–∏—è
    original_obj.name = "Original_Outline"
    original_obj.location.x = -5  # –°–¥–≤–∏–≥–∞–µ–º –≤–ª–µ–≤–æ

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    print(f"\n–ó–∞–≥—Ä—É–∑–∫–∞ –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ: {cleaned_path}")
    try:
        bpy.ops.wm.obj_import(filepath=cleaned_path)
    except AttributeError:
        bpy.ops.import_scene.obj(filepath=cleaned_path)

    # –ù–∞—Ö–æ–¥–∏–º –æ—á–∏—â–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
    cleaned_obj = bpy.data.objects.get("Building_Outline_Merged")

    if not cleaned_obj:
        print("–û–®–ò–ë–ö–ê: –û–±—ä–µ–∫—Ç 'Building_Outline_Merged' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—á–∏—â–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ
    cleaned_stats = {
        "vertices": len(cleaned_obj.data.vertices),
        "faces": len(cleaned_obj.data.polygons),
        "edges": len(cleaned_obj.data.edges)
    }

    print(f"\n–û–ß–ò–©–ï–ù–ù–´–ô (–ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏):")
    print(f"  –í–µ—Ä—à–∏–Ω—ã: {cleaned_stats['vertices']}")
    print(f"  –ì—Ä–∞–Ω–∏: {cleaned_stats['faces']}")
    print(f"  –†–µ–±—Ä–∞: {cleaned_stats['edges']}")

    # –ü–µ—Ä–µ–∏–º–µ–Ω—É–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π –¥–ª—è —Ä–∞–∑–ª–∏—á–∏—è
    cleaned_obj.name = "Cleaned_Outline"
    cleaned_obj.location.x = 5  # –°–¥–≤–∏–≥–∞–µ–º –≤–ø—Ä–∞–≤–æ

    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É
    print("\n" + "=" * 60)
    print("–†–ê–ó–ù–ò–¶–ê:")
    print(f"  –£–¥–∞–ª–µ–Ω–æ –≤–µ—Ä—à–∏–Ω: {original_stats['vertices'] - cleaned_stats['vertices']}")
    print(f"  –£–¥–∞–ª–µ–Ω–æ –≥—Ä–∞–Ω–µ–π: {original_stats['faces'] - cleaned_stats['faces']}")
    print(f"  –£–¥–∞–ª–µ–Ω–æ —Ä–µ–±–µ—Ä: {original_stats['edges'] - cleaned_stats['edges']}")

    # –ü—Ä–æ—Ü–µ–Ω—Ç —É–ª—É—á—à–µ–Ω–∏—è
    vertex_improvement = (1 - cleaned_stats['vertices'] / original_stats['vertices']) * 100
    face_improvement = (1 - cleaned_stats['faces'] / original_stats['faces']) * 100

    print(f"\n  –£–º–µ–Ω—å—à–µ–Ω–∏–µ –≤–µ—Ä—à–∏–Ω: {vertex_improvement:.1f}%")
    print(f"  –£–º–µ–Ω—å—à–µ–Ω–∏–µ –≥—Ä–∞–Ω–µ–π: {face_improvement:.1f}%")

    print("=" * 60)

    # –°–æ–∑–¥–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–ª–∏—á–∏—è
    # –û—Ä–∏–≥–∏–Ω–∞–ª - –∫—Ä–∞—Å–Ω–æ–≤–∞—Ç—ã–π (—Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏)
    original_mat = bpy.data.materials.new(name="Original_Material")
    original_mat.diffuse_color = (1.0, 0.3, 0.3, 1.0)  # –ö—Ä–∞—Å–Ω–æ–≤–∞—Ç—ã–π
    original_mat.use_nodes = True

    if original_obj.data.materials:
        original_obj.data.materials[0] = original_mat
    else:
        original_obj.data.materials.append(original_mat)

    # –û—á–∏—â–µ–Ω–Ω—ã–π - –∑–µ–ª–µ–Ω–æ–≤–∞—Ç—ã–π (—á–∏—Å—Ç—ã–π)
    cleaned_mat = bpy.data.materials.new(name="Cleaned_Material")
    cleaned_mat.diffuse_color = (0.3, 1.0, 0.3, 1.0)  # –ó–µ–ª–µ–Ω–æ–≤–∞—Ç—ã–π
    cleaned_mat.use_nodes = True

    if cleaned_obj.data.materials:
        cleaned_obj.data.materials[0] = cleaned_mat
    else:
        cleaned_obj.data.materials.append(cleaned_mat)

    print("\n‚úÖ –û–±—ä–µ–∫—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –≤–∏–∑—É–∞–ª—å–Ω–æ–º—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—é:")
    print(f"   - –û—Ä–∏–≥–∏–Ω–∞–ª (–∫—Ä–∞—Å–Ω—ã–π): {original_obj.name}")
    print(f"   - –û—á–∏—â–µ–Ω–Ω—ã–π (–∑–µ–ª–µ–Ω—ã–π): {cleaned_obj.name}")
    print("\n–û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ü–µ–Ω—É –≤ Blender UI –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º blend —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    blend_path = os.path.join(script_dir, "outline_comparison.blend")
    bpy.ops.wm.save_as_mainfile(filepath=blend_path)
    print(f"\nüíæ –°—Ü–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {blend_path}")


if __name__ == "__main__":
    compare_objects()
